-- задача 1.1 ред

{-
Определите прагматику функций
-}

mult n 0 = 0
mult n m = mult n (m-1) + n
{-Функция mult реализует умножение числа n на 
число m через рекурсивное сложение. Она уменьшает m на 
единицу на каждом рекурсивном вызове и добавляет n к результату,
пока m не станет равным 0. Если m == 0, результат умножения равен 0.-}


russ n 1 = n
russ n m | m `mod` 2 == 0 = russ (n * n) (m `div` 2)
         | True           = n * russ (n * n) (m `div` 2)
{-Функция russ выполняет возведение числа n в степень m
методом русского умножения (сокращения операций умножения). 
Если степень m чётная, функция удваивает основание n и делит степень
пополам; если m нечётная, один раз умножает на n, затем продолжает
рекурсивное возведение в квадрат.-}


z :: Int -> Int -> Int
z p n | n < p  = 0
      | True   = 1 + z p (n `div` p)
{-Функция z вычисляет, сколько раз число p входит в число n
при делении нацело (по сути, логарифм числа n по основанию p,
округленный вниз). Она рекурсивно делит n на p и считает 
количество делений, пока n не станет меньше p.-}


f :: Int -> String
f n | n >= 1000 = "M" ++ f (n - 1000)
    | n >= 900  = "CM" ++ f (n - 900)
    | n >= 500  = "D" ++ f (n - 500)
    | n >= 400  = "CD" ++ f (n - 400)
    | n >= 100  = "C" ++ f (n - 100)
    | n >= 90   = "XC" ++ f (n - 90)
    | n >= 50   = "L" ++ f (n - 50)
    | n >= 40   = "XL" ++ f (n - 40)
    | n >= 10   = "X" ++ f (n - 10)
    | n >= 9    = "IX" ++ f (n - 9)
    | n >= 5    = "V" ++ f (n - 5)
    | n >= 4    = "IV" ++ f (n - 4)
    | n >= 1    = "I" ++ f (n - 1)
    | otherwise      = ""
{-Назначение: Функция f преобразует заданное число n в римское 
числовое представление. Она рекурсивно уменьшает значение n на 
максимально возможные римские разряды (M, D, C, L, X, V, I), 
добавляя соответствующий символ к строке результата.-}

-- Тесты
testMult = mult 5 0 == 0 &&
           mult 5 3 == 15 &&
           mult 0 5 == 0 &&
           mult (-5) 3 == (-15)

testRuss = russ 2 3 == 8 &&
           russ 3 4 == 81

testZ = z 2 8 == 3 &&
        z 3 27 == 3 &&
        z 5 100 == 2

testF = f 1 == "I" &&
        f 4 == "IV" &&
        f 9 == "IX" &&
        f 58 == "LVIII" &&
        f 1994 == "MCMXCIV"
